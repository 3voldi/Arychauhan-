module.exports = {
 config: {
 name: 'xl',
 version: '1.0',
 author: 'Chitron Bhattacharjee',
 countDown: 10,
 role: 0,
 longDescription: {
 en: 'Generate an image from text using SDXL.'
 },
 category: 'image',
 guide: {
 en: '{pn} prompt [--ar=<ratio>] or [--ar <ratio>]'
 }
 },

 onStart: async function ({ message, api, args, event }) {
 const promptText = args.join(' ');
 if (!promptText) {
 return message.reply(
 `üò° Please enter a text prompt\nExample:\n${global.GoatBot.config.prefix}xl a cat\nor\n${global.GoatBot.config.prefix}xl a girl --ar 2:3`
 );
 }

 // Anime-style coin notice
 message.reply(
 "üå∏ ùì£ùì±ùì≤ùìº ùì¨ùì∏ùì∂ùì∂ùì™ùì∑ùì≠ ùîÄùì≤ùìµùìµ ùì¨ùì∏ùìºùìΩ ‚ù∫‚ìø ùì¨ùì∏ùì≤ùì∑ùìº~\nüí´ ùìòùìΩ ùîÄùì≤ùìµùìµ ùì´ùìÆ ùì≠ùìÆùì≠ùìæùì¨ùìΩùìÆùì≠ ùìØùìªùì∏ùì∂ ùîÇùì∏ùìæùìª ùì´ùì™ùìµùì™ùì∑ùì¨ùìÆ!"
 );

 let ratio = '1:1';
 const ratioIndex = args.findIndex(arg => arg.startsWith('--ar='));
 if (ratioIndex !== -1) {
 ratio = args[ratioIndex].split('=')[1];
 args.splice(ratioIndex, 1);
 } else {
 const ratioFlagIndex = args.findIndex(arg => arg === '--ar');
 if (ratioFlagIndex !== -1 && args[ratioFlagIndex + 1]) {
 ratio = args[ratioFlagIndex + 1];
 args.splice(ratioFlagIndex, 2);
 }
 }

 api.setMessageReaction("‚è≥", event.messageID, () => {}, true);
 const startTime = new Date().getTime();

 try {
 const prompt = args.join(' ');
 const world = `&ratio=${ratio}`;
 const team = `xl31?prompt=${encodeURIComponent(prompt)}${world}`;
 const o = "xyz";
 const imageURL = `https://smfahim.${o}/${team}`;

 const attachment = await global.utils.getStreamFromURL(imageURL);
 const endTime = new Date().getTime();
 const timeTaken = (endTime - startTime) / 1000;

 message.reply({
 body: `üñºÔ∏è ùìóùìÆùìªùìÆ ùì≤ùìº ùîÇùì∏ùìæùìª ùìßùìõ ùìúùì∏ùì≠ùìÆùìµ!\n‚è±Ô∏è ùì£ùì≤ùì∂ùìÆ ùìΩùì™ùì¥ùìÆùì∑: ${timeTaken} seconds`,
 attachment: attachment
 });

 api.setMessageReaction("‚úÖ", event.messageID, () => {}, true);
 } catch (error) {
 console.error(error);
 api.setMessageReaction("‚ùå", event.messageID, () => {}, true);
 message.reply("‚ùå | Failed to generate image. Please try again later.");
 }
 }
};